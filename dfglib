dfg () 
{ 
    : Directory Function Grep;
    : related: f2file dfg .;
    : date: 2020-10-03;
    : date: 2020-12-06;
    : date: 2021-03-06 default is now UNRETIRED;
    : date: 2021-08-02;
    : lesson: dont PAUSE in here;
    : date: 2022-05-14;
    debug ENTRY $*;
    local dir=$(dfg_db);
    debug DIR: $dir;
    runfrom $dir $@ || { 
        debug return RUNFROM $*;
        return
    };
    : only files -- functions -- in library directories;
    debug REMOVING $*;
    rm -fr $(find */* -type d);
    debug REMOVED $*;
    dfg_rd "${1:-dfg}" | column | sorttable fun
}
dfg_all () 
{ 
    : all DFG library functions;
    ${*:-echo} dfg \
               dfg_{all,{clean,short}context,dupdef,dups,example} \
               dfg_{f{ield,un{,ctions}},help,hint} \
               dfg_{load,rd,todo}
}
dfg_cleancontext () 
{ 
    : clear abstract and function definitions from CONTEXT;
    : date: 2021-04-30;
    report_notpipe && return 1;
    row 'context !~ /^:/ && context !~ /[(][)]/'
}
dfg_shortcontext () 
{ 
    : clear abstract and function definitions from CONTEXT;
    : date: 2021-04-30;
    : date: 2022-06-16;
    report_notpipe && return 1;
    local clength=${1:-57};
    compute "context = substr(context,1,$clength)"
}
dfg_dupdef () 
{ 
    : those functions defined in more than one library;
    : date: 2022-02-19;
    function _dupdef () 
    { 
        ls */* | sawk '{ print $NF }' | sort | uniq -c | awk '$1 > 1 {print $2}'
    };
    indir $(dfg_db) _dupdef
}
dfg_dups () 
{ 
    : date: 2021-10-12;
    runfrom $(dfb_db) || return;
    ls */* | grep -f <(duplicate_functions) | grep retiredlib | sed s/retiredlib/*/ | while read line; do
        echo $line;
        diff $line;
        echo;
    done
}
dfg_example () 
{ 
    : date: 2021-07-19;
    shd_latest $(dfg xargs | short_context | column fun | headoff | sort -u) | sort
}
dfg_fun () 
{ 
    : Data Function Grep;
    : date: 2020-10-15;
    if_missingargs 1 $* && return 1;
    dfg $1 | sorttable fun
}
dfg_functions () 
{ 
    : list the functions matching a DFG;
    : date: 2021-03-09;
    report_notpipe && return 1;
    column fun | headoff | sort -u
}
dfg_help () 
{ 
    : date: 2021-08-01;
    sfg dfg_;
    comment e.g. dfg_z[hint,todo}
}
dfg_hint () 
{ 
    : date: 2021-02-07;
    dfg | justify
}
dfg_load () 
{ 
    : save functions in DFG_DB and link library to;
    : date: 2021-10-31;
    f2file $1;
    ln -f $1 ~/Library/bin
}
dfg_rd () 
{ 
    : search in DIR and Dot.DIR files for the argument;
    : date: 2022-05-14;
    debug ENTRY $*;
    dfg_fields rdb_hdr;
    grep -i "$1" .*_profile/* */* | sed 's/\//	/; s/: */	/'
}
dfg_todo () 
{ 
    : date: 2021-08-01;
    dfg todo:
}
